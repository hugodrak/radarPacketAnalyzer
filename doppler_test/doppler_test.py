import struct
import numpy as np


lookupnibble = [0, 0x32, 0x40, 0x4e, 0x5c, 0x6a, 0x78, 0x86, 0x94, 0xa2, 0xb0, 0xbe, 0xcc, 0xda, 0xe8, 0xf4]


def setup_lookup():
    lookupData = np.zeros((6, 256), dtype=np.uint8)
    if lookupData[5][255] == 0:
        for j in range(256):
            low = lookupnibble[(j & 0x0f)]
            high = lookupnibble[(j & 0xf0) >> 4]
            lookupData[0][j] = low # low normal
            lookupData[3][j] = high # high normal
            if low == 0xf4:
                lookupData[1][j] = 0xff # low both
                lookupData[2][j] = 0xff # low approaching
            elif low == 0xe8:
                lookupData[1][j] = 0xfe
                lookupData[2][j] = low
            else:
                lookupData[1][j] = low
                lookupData[2][j] = low

            if high == 0xf4:
                lookupData[4][j] = 0xff
                lookupData[5][j] = 0xff
            elif high == 0xe8:
                lookupData[4][j] = 0xfe
                lookupData[5][j] = high
            else:
                lookupData[4][j] = high
                lookupData[5][j] = high

    return lookupData




# def get_vars(format, data):
#     unpacked = struct.unpack(format, data)
#     return [x[0] if type(x) == bytes else x for x in unpacked]
#
#
#
#
# a = bytearray(b'\x18\x02\x87\x1f\x00D\x80\x00O\x06\x00\x80X\x01Jb\x00\x00\x00\x80\x00\x00\x00\xa0')
# RadarReport_08C4_21 = "<ssssssssssHsssssssH"
#
#
# v = get_vars(RadarReport_08C4_21, a)
# print(v[17:])
a = bytearray(b'\xee\xee\xee\x00\x00\x00\x00A\x96\xcb\xdd\xdd\xdd\xdd\xcd\x8b6\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10t\xc9\xdd\xdd\xdd\xdd\xdd\xcdzEu\xca\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xbcX\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\x86\xba\xbb\xabi$\x00\x00\x10S\xa8\xcc\xbch\x13\x00S\xb8\xdc\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xbch\x13\x00\x00\x00\x00\x00 d\xa8\xbb\xcb\xdc\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xcd\xcc\xbb\xaa\xcb\xdc\xdd\xdd\xdd\xdd\xdd\xdd\xbdX\x03\x00\x00\x00\x00 t\xc9\xdd\xdd\xdd\xacG\x02\x00\x00\x00\x00\x00\x00\x00\x10R\xa7\xcb\xdc\xcc\x9bF\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\x85\xcb\xdd\xdd\xach\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10"33\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x11\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11BUff5\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

ld = setup_lookup()
d = 2
l_low = ld[0+2]
l_high = ld[3+2]
doppler_spoke = np.zeros((1024), dtype=np.uint8)
for i in range(len(a)):
    doppler_spoke[2*i] = l_low[a[i]]
    doppler_spoke[2*i+1] = l_high[a[i]]

h=0
# doppler_spoke = np.zeros((2, 512), dtype=np.uint8)
# for i, h in enumerate(a):
#     low = h & 0x0f
#     high = (h & 0xf0) >> 4
#     doppler_spoke[0][i] = low
#     doppler_spoke[1][i] = high

r =0




